Help on method to_raster in module rioxarray.raster_array:

ttoo__rraasstteerr(raster_path: Union[str, os.PathLike], driver: Optional[str] = None, dtype: Union[str, numpy.dtype, NoneType] = None, tags: Optional[dict[str, str]] = None, windowed: bool = False, recalc_transform: bool = True, lock: Optional[bool] = None, compute: bool = True, **profile_kwargs) -> None method of rioxarray.raster_array.RasterArray instance
    Export the DataArray to a raster file.
    
    ..versionadded:: 0.2 lock
    
    Parameters
    ----------
    raster_path: Union[str, os.PathLike]
        The path to output the raster to.
    driver: str, optional
        The name of the GDAL/rasterio driver to use to export the raster.
        Default is "GTiff" if rasterio < 1.2 otherwise it will autodetect.
    dtype: str, optional
        The data type to write the raster to. Default is the datasets dtype.
    tags: dict, optional
        A dictionary of tags to write to the raster.
    windowed: bool, optional
        If True, it will write using the windows of the output raster.
        This is useful for loading data in chunks when writing. Does not
        do anything when writing with dask.
        Default is False.
    recalc_transform: bool, optional
        If False, it will write the raster with the cached transform from
        the dataarray rather than recalculating it.
        Default is True.
    lock: boolean or Lock, optional
        Lock to use to write data using dask.
        If not supplied, it will use a single process for writing.
    compute: bool, optional
        If True and data is a dask array, then compute and save
        the data immediately. If False, return a dask Delayed object.
        Call ".compute()" on the Delayed object to compute the result
        later. Call ``dask.compute(delayed1, delayed2)`` to save
        multiple delayed files at once. Default is True.
    **profile_kwargs
        Additional keyword arguments to pass into writing the raster. The
        nodata, transform, crs, count, width, and height attributes
        are ignored.
    
    Returns
    -------
    :obj:`dask.Delayed`:
        If the data array is a dask array and compute
        is True. Otherwise None is returned.
